import streamlit as st
import requests
import pandas as pd

# Configuration de la page
st.set_page_config(
    page_title="Pr√©diction D√©faut de Cr√©dit", page_icon="üí∞", layout="wide"
)

# Style personnalis√©
st.markdown(
    """
    <style>
    .big-font {
        font-size:24px !important;
        font-weight: bold;
    }
    </style>
    """,
    unsafe_allow_html=True,
)

# Titre de l'application
st.title("Syst√®me de Scoring Cr√©dit")
st.markdown("### Pr√©diction de la probabilit√© de d√©faut de paiement")

# Sidebar avec les informations
with st.sidebar:
    st.header("Instructions")
    st.write("1. Entrez l'ID du client")
    st.write("2. Cliquez sur 'Pr√©dire'")
    st.write("3. Consultez les r√©sultats")

    st.markdown("---")
    st.markdown("### √Ä propos")
    st.write(
        "Ce syst√®me aide √† la d√©cision d'octroi de cr√©dit en pr√©disant la probabilit√© de d√©faut de paiement d'un client."
    )

# Zone principale
col1, col2 = st.columns([2, 1])

with col1:
    # Input pour l'ID client
    client_id = st.number_input(
        "ID Client",
        min_value=100002,  # remplacer par MIN_ID
        max_value=456255,  # remplacer par MAX_ID
        step=1,
    )

    if st.button("Pr√©dire"):
        try:
            # Appel √† l'API
            response = requests.get(f"http://127.0.0.1:8000/predict/{client_id}")

            if response.status_code == 200:
                result = response.json()

                # Affichage des r√©sultats
                st.markdown("---")
                st.markdown("### R√©sultats de l'analyse")

                # Probabilit√© de d√©faut
                st.markdown("#### Probabilit√© de d√©faut")
                proba = result["probability"]
                st.progress(proba)
                st.write(f"Probabilit√©: {proba:.1%}")

                # D√©cision
                st.markdown("#### D√©cision")
                if result["prediction"] == 1:
                    st.error(f"üö´ {result['decision']}")
                else:
                    st.success(f"‚úÖ {result['decision']}")

            elif response.status_code == 400:
                st.error(response.json()["detail"])
            else:
                st.error("Erreur lors de la r√©cup√©ration des donn√©es")

        except Exception as e:
            st.error(f"Erreur lors de la connexion √† l'API: {str(e)}")

with col2:
    st.markdown("### Seuil de d√©cision")
    st.write("Seuil utilis√© : 36%")
    st.write(
        "Un client avec une probabilit√© de d√©faut sup√©rieure √† 36% se verra refuser le cr√©dit."
    )

# Footer
st.markdown("---")
st.markdown("Projet 7 - OpenClassrooms Data Scientist")
